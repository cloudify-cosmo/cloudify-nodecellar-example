tosca_definitions_version: cloudify_dsl_1_3

description: >
  This blueprint installs the Node Cellar application
  on an Amazon EC2 environment.

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4m5/types.yaml
  - http://www.getcloudify.org/spec/aws-plugin/1.4/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.2/plugin.yaml
  - types/nodecellar.yaml
  - types/aws-ec2-types.yaml

#####################################################################################
# The inputs section allows the user to use same blueprint for creating different
# deployments, each one with its own parameters.
#
# To specify deployment inputs run:
#   - cfy deployments create -b <blueprint_id> -d <deployment_id> -i inputs.yaml
#####################################################################################

inputs:

  image:
    description: >
      EC2 AMI for provisioning instances (e.g. ami-29ebb519 for Ubuntu 14.04.1)

  size:
    description: >
      EC2 instance type for provisioning instances (e.g. m3.medium)

  agent_user:
    description: >
      Username for SSH connections to instances from Cloudify Manager

node_templates:

  nodecellar:
    type: nodecellar.nodes.NodecellarApplicationModule
    relationships:

      ################################
      # Connected to mongod node
      ################################

      - type: node_connected_to_mongo
        target: mongod

      ################################
      # Contained in nodejs node
      ################################

      - type: node_contained_in_nodejs
        target: nodejs

  nodejs:
    type: nodecellar.nodes.NodeJSServer
    relationships:

      ################################
      # Contained in nodejs host
      ################################

      - type: cloudify.relationships.contained_in
        target: nodejs_host

  mongod:
    type: nodecellar.nodes.MonitoredMongoDatabase
    relationships:

      ################################
      # Contained in mongod host
      ################################

      - type: cloudify.relationships.contained_in
        target: mongod_host

  ############
  # Hosts
  ############

  nodejs_host:
    type: nodecellar.nodes.MonitoredServer
    relationships:

      ###########################################################
      # Attach our public IP address to nodejs host
      ###########################################################

      - type: cloudify.aws.relationships.instance_connected_to_elastic_ip
        target: nodecellar_ip

      ###########################################################
      # Put nodejs host in nodecellar security group
      ###########################################################

      - type: cloudify.aws.relationships.instance_connected_to_security_group
        target: nodecellar_security_group

  mongod_host:
    type: nodecellar.nodes.MonitoredServer
    relationships:

      ###########################################################
      # Put mongod host in mongod security group
      ###########################################################

      - type: cloudify.aws.relationships.instance_connected_to_security_group
        target: mongod_security_group

  ###########################################################
  # Security group to open up the Node.js HTTP port to
  # world access.
  ###########################################################

  nodecellar_security_group:
    type: cloudify.aws.nodes.SecurityGroup
    properties:
      description: Security group for Node Cellar application nodes
      rules:
        - ip_protocol: tcp
          from_port: { get_property: [ nodecellar, port ] }
          to_port: { get_property: [ nodecellar, port ] }
          cidr_ip: 0.0.0.0/0

  ###########################################################
  # Security group to open up the MongoDB ports to the
  # application hosts.
  ###########################################################

  mongod_security_group:
    type: cloudify.aws.nodes.SecurityGroup
    properties:
      description: Security group for MongoDB hosts
      rules:
        - ip_protocol: tcp
          from_port: { get_property: [ mongod, port ] }
          to_port: { get_property: [ mongod, port ] }
          cidr_ip: 0.0.0.0/0
        - ip_protocol: tcp
          from_port: 28017
          to_port: 28017
          cidr_ip: 0.0.0.0/0

  ###########################################################
  # Our public IP address for world access.
  ###########################################################

  nodecellar_ip:
    type: cloudify.aws.nodes.ElasticIP

###########################################################
# The outputs section exposes the application endpoint.
#
# You can access it by running:
#   - cfy deployments -d <deployment_id> outputs
###########################################################

outputs:
  endpoint:
    description: Web application endpoint
    value:
      ip_address: { get_attribute: [ nodecellar_ip, aws_resource_id ] }
      port: { get_property: [ nodecellar, port ] }
