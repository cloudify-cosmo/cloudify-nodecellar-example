###########################################################
# This Blueprint installs the nodecellar application
# on hosts using hostpool.
###########################################################

tosca_definitions_version: cloudify_dsl_1_0

imports:  
  - http://www.getcloudify.org/spec/cloudify/3.2m7/types.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.2m7/plugin.yaml
  - https://raw.githubusercontent.com/cloudify-cosmo/cloudify-host-pool-plugin/master/plugin.yaml
  - types/nodecellar.yaml

###########################################################
# Inputs section allows the user to use same
# blueprint several times, with different paramters for
# each time.
###########################################################

inputs:
  hostpool_service_url:
      type: string
      description: >
        The url of the host pool service to acquire and release nodes.

node_templates:

  ###########################################################
  # We define a type that inherits cloudify's
  # hostpool node, and adds monitoring capabillities
  # on top of it.
  ###########################################################

  mongod_host:
    type: cloudify.hostpool.nodes.Host
    interfaces:

      ###########################################################
      # We are infact telling cloudify to install a diamond
      # monitoring agent on the server.
      #
      # (see https://github.com/BrightcoveOS/Diamond)
      ###########################################################

      cloudify.interfaces.monitoring_agent:
          install:
            implementation: diamond.diamond_agent.tasks.install
            inputs:
              diamond_config:
                interval: 1
          start: diamond.diamond_agent.tasks.start
          stop: diamond.diamond_agent.tasks.stop
          uninstall: diamond.diamond_agent.tasks.uninstall

      ###########################################################
      # Adding some collectors. These collectors are necessary
      # for the Cloudify UI to display the deafult metrics.
      ###########################################################

      cloudify.interfaces.monitoring:
          start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
              collectors_config:
                CPUCollector: {}
                MemoryCollector: {}
                LoadAverageCollector: {}
                DiskUsageCollector:
                  config:
                    devices: x?vd[a-z]+[0-9]*$
                NetworkCollector: {}

      cloudify.interfaces.lifecycle:
          start:
            inputs:
              service_url: { get_input: hostpool_service_url }
          delete:
            inputs:
              service_url: { get_input: hostpool_service_url }


  mongod:
    type: nodecellar.nodes.MongoDatabase
    properties:
      port: 27017
    interfaces:
      cloudify.interfaces.lifecycle:

        ###########################################################
        # The MongoDBCollector depends on a python library called
        # pymongo. We install this library in the 'configure'
        # lifecycle hook of this node.
        ###########################################################

        configure: scripts/mongo/install-pymongo.sh

      ###########################################################
      # Notice that this node defines an additional collector
      # to collect data on the MongoDB.
      ###########################################################

      cloudify.interfaces.monitoring:
          start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
              collectors_config:
                MongoDBCollector:
                  config:
                    hosts: "localhost:27017"
    relationships:
      - type: cloudify.relationships.contained_in
        target: mongod_host

################################
# Setting the hostpool node for nodecellar application.
################################
  nodejs_host:
    type: cloudify.hostpool.nodes.Host
    interfaces:
      cloudify.interfaces.lifecycle:
          start:
            inputs:
              service_url: { get_input: hostpool_service_url }
          delete:
            inputs:
              service_url: { get_input: hostpool_service_url }

  nodejs:
    type: nodecellar.nodes.NodeJSServer
    relationships:
      - type: cloudify.relationships.contained_in
        target: nodejs_host

  nodecellar:
    type: nodecellar.nodes.NodecellarApplicationModule
    properties:
      port: 8080
    relationships:

      ################################
      # Setting the mongo connection
      ################################

      - type: node_connected_to_mongo
        target: mongod

      ################################
      # Setting the nodejs connection
      ################################

      - type: node_contained_in_nodejs
        target: nodejs

###########################################################
# This outputs section exposes the application endpoint.
# You can access it by running:
#   - cfy deployments -d <deployment_id> outputs
###########################################################

outputs:
  endpoint:
    description: Web application endpoint
    value:
      ip_address: { get_attribute: [ nodejs_host, ip ] }
      port: { get_property: [nodecellar, port] }

