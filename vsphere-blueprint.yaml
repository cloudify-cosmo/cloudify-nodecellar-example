tosca_definitions_version: cloudify_dsl_1_3

description: >
  This Blueprint installs the nodecellar application
  on an vsphere environment.

imports:
  - http://www.getcloudify.org/spec/cloudify/4.3/types.yaml
  - http://www.getcloudify.org/spec/vsphere-plugin/2.3.0/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.6/plugin.yaml
  - types/nodecellar.yaml
  - types/vsphere-types.yaml

#####################################################################################
# inputs section allows the user to use same
# blueprint for creating different deployments, each one
# with its own parameters.
# to specify deployment inputs run:
#   - cfy deployments create -b <blueprint_id> <deployment_id> -i inputs.json
#####################################################################################

inputs:

  template_name:
    description: >
      Template to clone VMs from

  agent_user:
    description: >
      User for connecting to application VMs

  management_network:
    description: >
      Which network to deploy the VM on

  external_network:
    description: >
      Which network to deploy the VM on

  diamond_reporting_interval:
    description: interval in seconds for reporting metrics by diamond agent
    type: integer
    default: 10
# This default is here for UX and demos, we strongly recommend you reconsider
# how much data you report for your own production system based on your
# specific application, as this generates approximately 12kb of data per report,
# so for example a setting of 10 would generate approximately 726mb per week,
# which might be an issue if you install your manager on a small partition.


node_templates:

  nodecellar:
    type: nodecellar.nodes.NodecellarApplicationModule
    relationships:

      ################################
      # Setting the mongo connection
      ################################

      - type: node_connected_to_mongo
        target: mongod

      ################################
      # Setting the nodejs connection
      ################################

      - type: node_contained_in_nodejs
        target: nodejs

  mongod:
    type: nodecellar.nodes.MonitoredMongoDatabase
    relationships:
      - type: cloudify.relationships.contained_in
        target: mongod_host

  nodejs:
    type: nodecellar.nodes.NodeJSServer
    relationships:
      - type: cloudify.relationships.contained_in
        target: nodejs_host

  mongod_host:
    type: nodecellar.nodes.MonitoredServer

  nodejs_host:
    type: nodecellar.nodes.MonitoredServer

outputs:

  endpoint:
    description: Web application endpoint
    value:
      ip_address: { get_attribute: [ nodejs_host, public_ip ] }
      port: { get_property: [ nodecellar, port ] }
