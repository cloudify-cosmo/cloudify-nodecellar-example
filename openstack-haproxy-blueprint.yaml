tosca_definitions_version: cloudify_dsl_1_3

description: >
  This blueprint installs the Node Cellar application behind
  an HAProxy instance on an OpenStack environment.

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4m5/types.yaml
  - http://www.getcloudify.org/spec/openstack-plugin/1.3.1/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.2/plugin.yaml
  - types/nodecellar.yaml
  - types/openstack-types.yaml
  - types/haproxy/haproxy.yaml

#####################################################################################
# The inputs section allows the user to use same blueprint for creating different
# deployments, each one with its own parameters.
#
# To specify deployment inputs run:
#   - cfy deployments create -b <blueprint_id> -d <deployment_id> -i inputs.yaml
#####################################################################################

inputs:

  image:
    description: >
      OpenStack image for provisioning VMs

  flavor:
    description: >
      OpenStack flavor for provisioning VMs

  agent_user:
    description: >
      Username for SSH connections to VMs from Cloudify Manager

node_templates:

  haproxy:
    type: nodecellar.nodes.MonitoredHAProxy
    properties:
      backend_app_port: { get_property: [ nodecellar, port ] }
    relationships:

      ########################################
      # Contained in haproxy frontend host
      #
      # Note: HAProxy installation scripts
      # only support Ubuntu hosts
      ########################################

      - target: haproxy_frontend_host
        type: cloudify.relationships.contained_in

  nodecellar:
    type: nodecellar.nodes.NodecellarApplicationModule
    relationships:

      ################################
      # Connected to mongod node
      ################################

      - type: node_connected_to_mongo
        target: mongod

      ################################
      # Contained in nodejs node
      ################################

      - type: node_contained_in_nodejs
        target: nodejs

      ################################
      # Connected to haproxy node
      ################################

      - type: app_connected_to_haproxy
        target: haproxy

  nodejs:
    type: nodecellar.nodes.NodeJSServer
    relationships:

      ################################
      # Contained in nodejs host
      ################################

      - type: cloudify.relationships.contained_in
        target: nodejs_host

  mongod:
    type: nodecellar.nodes.MonitoredMongoDatabase
    relationships:

      ################################
      # Contained in mongod host
      ################################

      - type: cloudify.relationships.contained_in
        target: mongod_host

  ############
  # Hosts
  ############

  haproxy_frontend_host:
    type: nodecellar.nodes.MonitoredServer
    relationships:

      ###########################################################
      # Attach our public IP address to haproxy frontend host
      ###########################################################

      - type: cloudify.openstack.server_connected_to_floating_ip
        target: nodecellar_ip

      ###################################################################
      # Put haproxy frontend host in haproxy frontend security group
      ###################################################################

      - type: cloudify.openstack.server_connected_to_security_group
        target: haproxy_frontend_security_group

  nodejs_host:
    type: nodecellar.nodes.MonitoredServer

    ###########################################################
    # Setting the nodejs_host initial number of instances to 2.
    # The default values for instances.deploy is 1.
    ###########################################################

    instances:
      deploy: 2

    relationships:

      ###########################################################
      # Attach nodejs host to nodecellar security group
      ###########################################################

      - target: nodecellar_security_group
        type: cloudify.openstack.server_connected_to_security_group

  mongod_host:
    type: nodecellar.nodes.MonitoredServer
    relationships:

      ###########################################################
      # Put mongod host in mongod security group
      ###########################################################

      - target: mongod_security_group
        type: cloudify.openstack.server_connected_to_security_group

  ###########################################################
  # Security group to open up the HAProxy HTTP port and
  # statistics port to world access.
  ###########################################################

  haproxy_frontend_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      security_group:
        name: haproxy_frontend_security_group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: { get_property: [ haproxy, frontend_port ] }
        - remote_ip_prefix: 0.0.0.0/0
          port: { get_property: [ haproxy, statistics_port ] }

  ###########################################################
  # Security group to open up the Node.js HTTP port to
  # HAProxy hosts.
  ###########################################################

  nodecellar_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      security_group:
        name: nodecellar_security_group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: { get_property: [ nodecellar, port ] }

  ###########################################################
  # Security group to open up the MongoDB ports to the
  # application hosts.
  ###########################################################

  mongod_security_group:
    type: cloudify.openstack.nodes.SecurityGroup
    properties:
      security_group:
        name: mongod_security_group
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          port: { get_property: [ mongod, port ] }
        - remote_ip_prefix: 0.0.0.0/0
          port: 28017

  ###########################################################
  # Our public IP address for world access.
  ###########################################################

  nodecellar_ip:
    type: cloudify.openstack.nodes.FloatingIP

###########################################################
# The outputs section exposes the application endpoint.
#
# You can access it by running:
#   - cfy deployments -d <deployment_id> outputs
###########################################################

outputs:
  endpoint:
    description: Web application endpoint
    value:
      ip_address: { get_attribute: [ nodecellar_ip, floating_ip_address ] }
      port: { get_property: [ haproxy, frontend_port] }
