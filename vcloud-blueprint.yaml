tosca_definitions_version: cloudify_dsl_1_3

description: >
  This blueprint installs the Node Cellar application
  on a VMWare vCloud environment.

imports:
  - http://www.getcloudify.org/spec/cloudify/3.4m5/types.yaml
  - http://www.getcloudify.org/spec/tosca-vcloud-plugin/1.3.1/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3.2/plugin.yaml
  - types/nodecellar.yaml
  - types/vcloud-types.yaml

#####################################################################################
# The inputs section allows the user to use same blueprint for creating different
# deployments, each one with its own parameters.
#
# To specify deployment inputs run:
#   - cfy deployments create -b <blueprint_id> -d <deployment_id> -i inputs.yaml
#####################################################################################

inputs:

  template:
    type: string
    description: >
      vCloud template for provisioning servers

  agent_user:
    description: >
      Username for SSH connections to servers from Cloudify Manager
    type: string
    default: ubuntu

  agent_public_key:
    type: string

  catalog:
    type: string

  server_cpu:
    default: 2
    description: >
      CPU count for provisioning servers

  server_memory:
    default: 4096
    description: >
      Memory in MB for provisioning servers

  edge_gateway:
    type: string
    default: gateway
    description: >
      For 'ondemand' service type, the value of edge_gateway
      is always 'gateway'

  management_network_name:
    description: >
      Name of the existing network with access to Cloudify Manager
    type: string

node_templates:

  nodecellar:
    type: nodecellar.nodes.NodecellarApplicationModule
    properties:
      port: 8080
    relationships:

      ################################
      # Connected to mongod node
      ################################

      - type: node_connected_to_mongo
        target: mongod

      ################################
      # Contained in nodejs node
      ################################

      - type: node_contained_in_nodejs
        target: nodejs

  nodejs:
    type: nodecellar.nodes.NodeJSServer
    relationships:

      ################################
      # Contained in nodejs host
      ################################

      - type: cloudify.relationships.contained_in
        target: nodejs_host

  mongod:
    type: nodecellar.nodes.MongoDatabase
    properties:
      port: 27017
    relationships:

      ################################
      # Contained in mongod host
      ################################

      - type: cloudify.relationships.contained_in
        target: mongod_host

    interfaces:
      cloudify.interfaces.lifecycle:

        ###########################################################
        # The MongoDBCollector depends on a python library called
        # PyMongo. We install this library in the 'configure'
        # lifecycle hook of this node.
        ###########################################################

        configure: scripts/mongo/install-pymongo.sh

      ###########################################################
      # Notice that this node defines an additional collector
      # to collect data on the MongoDB.
      ###########################################################

      cloudify.interfaces.monitoring:
          start:
            implementation: diamond.diamond_agent.tasks.add_collectors
            inputs:
              collectors_config:
                MongoDBCollector:
                  config:
                    hosts: "localhost:27017"

  ############
  # Hosts
  ############

  nodejs_host:
    type: nodecellar.nodes.MonitoredServer
    relationships:

      ###########################################################
      # Attach our public IP address to nodejs host
      ###########################################################

      - target: nodecellar_ip
        type: cloudify.vcloud.server_connected_to_floating_ip

      ###########################################################
      # Use key pair for SSH connections
      ###########################################################

      - target: ssh_keypair
        type: cloudify.vcloud.server_connected_to_keypair

      ###########################################################
      # Put nodejs host in nodejs security group
      ###########################################################

      - target: nodejs_security_group
        type: cloudify.vcloud.server_connected_to_security_group

  mongod_host:
    type: nodecellar.nodes.MonitoredServer
    relationships:

      ###########################################################
      # Put mongod host in mongod security group
      ###########################################################

      - target: mongod_security_group
        type: cloudify.vcloud.server_connected_to_security_group

      ###########################################################
      # Use key pair for SSH connections
      ###########################################################

      - target: ssh_keypair
        type: cloudify.vcloud.server_connected_to_keypair

  ###########################################################
  # Security group to open up the Node.js HTTP port to
  # world access. Also opens up backward access.
  ###########################################################

  nodejs_security_group:
      type: cloudify.vcloud.nodes.SecurityGroup
      properties:
          security_group:
              name: nodejsvcloud_security_group
              edge_gateway: { get_input: edge_gateway }
          rules:
              - source: external
                destination: internal
                destination_port: 8080
                action: allow
                description: >
                      Open HTTP port
                protocol: TCP
              - source: host
                destination: any
                action: allow
                description: >
                       Backward network connection
                protocol: any

  ###########################################################
  # Security group to open up the MongoDB ports to the
  # application hosts. Also opens up backward access.
  ###########################################################

  mongod_security_group:
      type: cloudify.vcloud.nodes.SecurityGroup
      properties:
          security_group:
              name: mongodvcloud_security_group
              edge_gateway: { get_input: edge_gateway }
          rules:
              - source: host
                destination: any
                action: allow
                description: >
                       Backward network connection
                protocol: any

  ###########################################################
  # Our public IP address for world access.
  ###########################################################

  nodecellar_ip:
    type: cloudify.vcloud.nodes.FloatingIP
    properties:
      floatingip:
        edge_gateway: { get_input: edge_gateway }

  ###########################################################
  # Key pair for SSH connections
  ###########################################################

  ssh_keypair:
    type: cloudify.vcloud.nodes.KeyPair
    properties:
      public_key:
        user: { get_input: agent_user }
        key:  { get_input: agent_public_key }

###########################################################
# The outputs section exposes the application endpoint.
#
# You can access it by running:
#   - cfy deployments -d <deployment_id> outputs
###########################################################

outputs:
  endpoint:
    description: Web application endpoint
    value:
      ip_address: { get_attribute: [ nodecellar_ip, public_ip ] }
      port: { get_property: [ nodecellar, port ] }
