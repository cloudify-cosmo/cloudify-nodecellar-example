###########################################################
# This Blueprint installs the nodecellar application
# on a softlayer cloud environment.
###########################################################

tosca_definitions_version: cloudify_dsl_1_1

imports:
  - http://www.getcloudify.org/spec/cloudify/3.3m3/types.yaml
  - http://www.getcloudify.org/spec/softlayer-plugin/1.3m3/plugin.yaml
  - http://www.getcloudify.org/spec/diamond-plugin/1.3m3/plugin.yaml
  - types/nodecellar.yaml
  - types/softlayer-types.yaml
  - types/haproxy/haproxy.yaml

#####################################################################################
# inputs section allows the user to use same
# blueprint for creating different deployments, each one
# with its own parameters.
# to specify deployment inputs run:
#   - cfy deployments create -b <blueprint_id> -d <deployment_id> -i inputs.json
#####################################################################################

inputs:

  location:
    description: >
      Location of the data center
      Default value is the location id of Melbourne 1
    default: 449596

  domain: 
    description: The domain
    default: cloudify.org

  ram:
    description: >
      Item id of the ram
      Default value is the item id of 16 GB
    default: 1017

  cpu: 
    description: >
      Item id of the cpu
      Default value is the item id of 4 x 2.0 GHz Cores
    default: 859

  disk: 
    description: >
      Item id of the disk
      Default value is the item id of 25 GB (SAN)
    default: 1178

  os: 
    description: >
      Item id of the operating system
      Default value is the item id of
      Ubuntu Linux 14.04 LTS Trusty Tahr - Minimal Install (64 bit)
    default: 4668

node_templates:

  nodecellar:
    type: nodecellar.nodes.NodecellarApplicationModule
    relationships:

      ################################
      # Setting the mongo connection
      ################################

      - type: node_connected_to_mongo
        target: mongod

      ################################
      # Setting the nodejs connection
      ################################

      - type: node_contained_in_nodejs
        target: nodejs

      ################################
      # Setting the haproxy connection
      ################################

      - type: app_connected_to_haproxy
        target: haproxy

  mongod:
    type: nodecellar.nodes.MonitoredMongoDatabase
    relationships:
      - type: cloudify.relationships.contained_in
        target: mongod_host

  nodejs:
    type: nodecellar.nodes.NodeJSServer
    relationships:
      - type: cloudify.relationships.contained_in
        target: nodejs_host

  haproxy:
    type: nodecellar.nodes.MonitoredHAProxy
    properties:
      backend_app_port: { get_property: [ nodecellar, port ] }
    relationships:
      - target: haproxy_frontend_host
        type: cloudify.relationships.contained_in

  mongod_host:
    type: nodecellar.nodes.MonitoredServer
    properties:
      hostname: mongod

  nodejs_host:
    type: nodecellar.nodes.MonitoredServer

    ###########################################################
    # Setting the nodejs_host initial number of instances to 2.
    # The default values for instances.deploy is 1.
    ###########################################################

    instances:
      deploy: 2

    properties:
      hostname: nodejs

  haproxy_frontend_host:
    type: nodecellar.nodes.MonitoredServer
    properties:
      hostname: haproxy

###########################################################
# This outputs section exposes the application endpoint.
# You can access it by running:
#   - cfy deployments -d <deployment_id> outputs
###########################################################

outputs:
  endpoint:
    description: Web application endpoint
    value:
      ip_address: { get_attribute: [ haproxy_frontend_host, public_ip ] }
      port: { get_property: [ nodecellar, port ] }
